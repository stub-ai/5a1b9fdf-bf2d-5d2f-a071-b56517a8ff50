{"config":{"system_prompt":"","model":"","temperature":0,"top_p":1,"framework":"nextjs-page-tailwind"},"prompts":[{"prompt":"1. **Create `dashboard` layout:**\n   - Define the full screen `dashboard` with a primary color scheme of #F0F0F0 for the body and #4682B4 for interactive elements.\n\n2. **Set up `dashboard` regions:**\n   - Define the left side area for the `taskList` module.\n   - Assign the top area for the `expDisplay` and `lvlDisplay`.\n   - Designate the right side for a vertical action menu that will include `addBtn` and `storeBtn`.\n\n3. **Add `taskList` module:**\n   - Implement a vertical, scrollable `taskList` section on the left side of the `dashboard`.","md5":"34ae6f09f811ff8ec9d823e88ea3568c"},{"prompt":"4. **Initialize `expDisplay`:**\n   - Position the `expDisplay` at the top of the dashboard and style the progress bar background in #E6E6E6 with a filling portion in #4682B4.\n\n5. **Position `lvlDisplay`:**\n   - Place the `lvlDisplay` adjacent to the avatar icon at the top of the `dashboard` and create a circular badge appearance.\n\n6. **Create `action menu`:**\n   - Add an action menu to the right side of the `dashboard` to house `addBtn` and `storeBtn`.","md5":"5dc9d8b374c421d6eeb3d6610218f9df"},{"prompt":"7. **Implement `addBtn`:**\n   - Add a circular `addBtn` to the action menu with a #32CD32 plus sign and #4682B4 background.\n\n8. **Implement `storeBtn`:**\n   - Place the `storeBtn` below `addBtn` in the action menu with a #FFA500 shopping bag icon.\n\n9. **Design `taskCard`:**\n   - Create a design for `taskCard` including placeholders for `title`, `description`, `dueDate`, and `difficultyLevel`.","md5":"25f72d0653c2fc3131d58ebb70070faf"},{"prompt":"10. **Add `title` display:**\n    - Inside `taskCard`, define a space for `title` with bold font in #333333.\n\n11. **Add `description` display:**\n    - Add space beneath `title` in `taskCard` for `description` in standard font size.\n\n12. **Add `dueDate` display:**\n    - Ensure `dueDate` is positioned under `description` in `taskCard`.","md5":"f255e554b6a7fdb76c2dd162e1be2575"},{"prompt":"13. **Implement `difficultyLevel` representation:**\n    - Create an area at the bottom of `taskCard` for difficulty indication.\n\n14. **Add `editBtn` inside `taskCard`:**\n    - Include an `editBtn` in each `taskCard` with a pencil icon.\n\n15. **Add `deleteBtn` inside `taskCard`:**\n    - Place a `deleteBtn` next to `editBtn` in each `taskCard` with a trash can icon.","md5":"0af4ad7f3dc778a6f7183f54ba3a6b96"},{"prompt":"7. **Implement `addBtn`:**\n   - Add a circular `addBtn` to the action menu with a #32CD32 plus sign and #4682B4 background.\n\n8. **Implement `storeBtn`:**\n   - Place the `storeBtn` below `addBtn` in the action menu with a #FFA500 shopping bag icon.\n\n9. **Design `taskCard`:**\n   - Create a design for `taskCard` including placeholders for `title`, `description`, `dueDate`, and `difficultyLevel`.\n\n10. **Add `title` display:**\n    - Inside `taskCard`, define a space for `title` with bold font in #333333.\n\n11. **Add `description` display:**\n    - Add space beneath `title` in `taskCard` for `description` in standard font size.\n\n12. **Add `dueDate` display:**\n    - Ensure `dueDate` is positioned under `description` in `taskCard`.\n\n13. **Implement `difficultyLevel` representation:**\n    - Create an area at the bottom of `taskCard` for difficulty indication.\n\n14. **Add `editBtn` inside `taskCard`:**\n    - Include an `editBtn` in each `taskCard` with a pencil icon.\n\n15. **Add `deleteBtn` inside `taskCard`:**\n    - Place a `deleteBtn` next to `editBtn` in each `taskCard` with a trash can icon.\n\n16. **Create `completeChkbox` in `taskCard`:**\n    - Implement a `completeChkbox` inside each `taskCard`.\n\n17. **Set up `textInput` fields:**\n    - Design `textInput` fields to be used in dialog windows for task information entry and editing.\n\n18. **Construct `addTaskDialog` window:**\n    - Establish a modal `addTaskDialog` that will appear in the center of the screen with `textInput` fields for task attributes and `saveBtn` and `cancelBtn`.\n\n19. **Construct `editTaskDialog` window:**\n    - Create a modal `editTaskDialog` similar to `addTaskDialog`, prepopulated with current task values.\n\n20. **Add `saveBtn` to dialogs:**\n    - Include a `saveBtn` inside each dialog window at the bottom right corner.\n\n21. **Add `cancelBtn` to dialogs:**\n    - Place a `cancelBtn` next to each `saveBtn` in the dialog windows.\n\n22. **Define update methods:**\n    - Implement `updateTaskList()`, `updateExpDisplay()`, and `updateLevelDisplay()` methods for dynamic updates across the dashboard.\n\n23. **Add task-specific methods to `taskCard`:**\n    - Add methods for task interaction: `updateTaskCard()`, `markTaskComplete()`, `displayTitle()`, `displayDescription()`, `displayDueDate()`, `displayDifficulty()`.\n\n24. **Integrate edit and add actions:**\n    - Create methods `openEditDialog()`, `openAddDialog()`, `populateAddFields()`, `populateEditFields()` for task modification and creation.\n\n25. **Define task deletion and checkbox toggle:**\n    - Implement `deleteTask()` and `toggleTaskCompletion()` methods within `taskCard`.\n\n26. **Define store interaction:**\n    - Establish `openStoreDialog()` method tied to the `storeBtn` for the redemption of experience points.\n\n27. **Implement save and cancel actions:**\n    - Complete `saveTaskChanges()` and `cancelDialog()` methods within the dialogs.","md5":"c6816e1877cde4296ee2b9252e4e5795"},{"prompt":"16. **Create `completeChkbox` in `taskCard`:**\n    - Implement a `completeChkbox` inside each `taskCard`.\n\n17. **Set up `textInput` fields:**\n    - Design `textInput` fields to be used in dialog windows for task information entry and editing.\n\n18. **Construct `addTaskDialog` window:**\n    - Establish a modal `addTaskDialog` that will appear in the center of the screen with `textInput` fields for task attributes and `saveBtn` and `cancelBtn`.","md5":"aa25e8c890cdb19004d9dc75345cf862"},{"prompt":"19. **Construct `editTaskDialog` window:**\n    - Create a modal `editTaskDialog` similar to `addTaskDialog`, prepopulated with current task values.\n\n20. **Add `saveBtn` to dialogs:**\n    - Include a `saveBtn` inside each dialog window at the bottom right corner.\n\n21. **Add `cancelBtn` to dialogs:**\n    - Place a `cancelBtn` next to each `saveBtn` in the dialog windows.","md5":"d532ddf60743a047eda08e5fa57b8891"}]}